
const HL_NORMAL    := 0;
const HL_NONPRINT  := 1;
const HL_COMMENT   := 2;
const HL_MLCOMMENT := 3;
const HL_KEYWORD1  := 4;
const HL_KEYWORD2  := 5;
const HL_STRING    := 6;
const HL_NUMBER    := 7;
const HL_MATCH     := 8;

const HL_HIGHLIGHT_NUMBERS := 1;
const HL_HIGHLIGHT_STRINGS := 2;

struct Syntax {
    extensions: string[];
    keywords: string[];
    singleline_comment_start: string;
    multiline_comment_start: string;
    multiline_comment_end: string;
    flags: i32;
}

struct Color {
    r: u8;
    g: u8;
    b: u8;
}

/*
var HIGHLIGHT_C_EXTENSIONS: string[] = { ".c", ".h", ".cpp", ".hpp", ".cc", ".hh", ".cxx", ".hxx" };
var HIGHLIGHT_C_KEYWORDS: string[] = {
    "auto","break","case","continue","default","do","else","enum",
    "extern","for","goto","if","register","return","sizeof","static",
    "struct","switch","typedef","union","volatile","while","NULL",

    "alignas","alignof","and","and_eq","asm","bitand","bitor","class",
    "compl","constexpr","const_cast","deltype","delete","dynamic_cast",
    "explicit","export","false","friend","inline","mutable","namespace",
    "new","noexcept","not","not_eq","nullptr","operator","or","or_eq",
    "private","protected","public","reinterpret_cast","static_assert",
    "static_cast","template","this","thread_local","throw","true","try",
    "typeid","typename","virtual","xor","xor_eq",

   "int|","long|","double|","float|","char|","unsigned|","signed|",
   "void|","short|","auto|","const|","bool|",
};

var HIGHLIGHT_C := Syntax {
    extensions = HIGHLIGHT_C_EXTENSIONS,
    keywords = HIGHLIGHT_C_KEYWORDS,
    singleline_comment_start = "//",
    multiline_comment_start = "/*",
    multiline_comment_end = "*/",
    flags = HL_HIGHLIGHT_NUMBERS | HL_HIGHLIGHT_STRINGS,
};

var HIGHLIGHT_DATABASE : Syntax[] = {
    HIGHLIGHT_C,
};

*/