alias bool = i8;

const true  := cast(bool) 1;
const false := cast(bool) 0;

fun exit(code: i32);
fun puts(str: i8*): i32;
fun strlen(str: i8*): i32;
fun malloc(size: i32): i8*;
fun memcmp(v1: void*, v2: void*, len: u32): i32;

fun __atcc_string_equals(a: string, b: string): i32 {
    if (a.length != b.length) return 0;

    if (memcmp(a.data, b.data, a.length) == 0)
        return 1;

    return 0;
}

fun __atcc_init_globals(); // Auto-generated by the compiler to initialize global variables

fun __atcc_start(argc: i32, argv: i8**): i32 {
    __atcc_init_globals();

    args: string[*];
    args.data = malloc(argc * sizeof(string));
    args.length = argc;

    for (i := 0; i < argc; i += 1) {
        arg := &args[i];

        arg.data = cast(u8*) argv[i];
        arg.length = strlen(argv[i]);
    }

    return Main(args);
}

fun assert(condition: bool, message: string) {
    if (!condition) {
        puts(cast(i8*) message.data);
        exit(1);
    }
}

