struct Foo {
    bar: i32[1];
    baz: i32[1];
}

fun add(a: i32[1], b: i32[1]): i32 {
    return a[0] + b[0];
}

var globalString := "Hello, World!";

fun Main(args: string[*]): i32 {
    foo: i32[1] = { 2 };
    bar: i32[1] = { 4 };

/*
    baz: i32[5] = {
        [3] = 5,
    };

    assert(baz[0] == 0, "baz[0] == 0");
    assert(baz[1] == 0, "baz[1] == 0");
    assert(baz[2] == 0, "baz[2] == 0");
    assert(baz[3] == 5, "baz[3] == 5");
    assert(baz[4] == 0, "baz[4] == 0");
*/

    assert(globalString == "Hello, World!", "Global string is not equal to 'Hello, World!'");
    assert(globalString.length == 13, "Global string length is not 13");


    assert(foo.length == 1, "foo.length == 1");
    assert(bar.length == 1, "bar.length == 1");

    assert(add(foo, bar) == 6, "add(foo, bar) == 6");

    stu := Foo {
        bar = foo,
        baz = bar,
    };

    assert(stu.bar.length == 1, "stu.bar.length == 1");
    assert(stu.baz.length == 1, "stu.baz.length == 1");

    assert(add(stu.bar, stu.baz) == 6, "add(stu.bar, stu.baz) == 6");

    assert("hello0" == "hello0", "Hello isn't hello??");
    assert("hello1" != "hello2", "Hello1 is hello2??");

    return 0;
}
